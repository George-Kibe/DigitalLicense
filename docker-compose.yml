# docker-compose.yml
services:
  backend:
    build:
      context: ./backend
    ports:
      - "3000:3000"
    environment:
      MONGODB_URI: ${MONGODB_URI}
      NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
      NEXT_PUBLIC_AWS_ACCESS_KEY_ID: ${NEXT_PUBLIC_AWS_ACCESS_KEY_ID}
      NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY: ${NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY}
      NEXT_PUBLIC_AWS_S3_REGION:  ${NEXT_PUBLIC_AWS_S3_REGION}
      NEXT_PUBLIC_S3_BUCKET_NAME: ${NEXT_PUBLIC_S3_BUCKET_NAME}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - mongo
    restart: on-failure
    networks:
      - app-network
  
  mongo:
    image: mongo:8
    container_name: mongodb
    ports:
      - "127.0.0.1:27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-network
    restart: on-failure
    volumes:
      - mongo-data:/data/db
  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - app-network
    restart: on-failure
volumes:
  mongo-data:

networks:
  app-network:
    driver: bridge